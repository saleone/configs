---
- hosts: localhost
  tasks:
    - name: Create required directory [~/.config]
      file:
        path: '{{ ansible_env.HOME }}/.config/'
        state: directory

    - name: Create required directory [~/.local/bin]
      file:
        path: '{{ ansible_env.HOME }}/.local/bin/'
        state: directory

    - name: Create required directory [~/.local/share]
      file:
        path: '{{ ansible_env.HOME }}/.local/share/'
        state: directory

    - name: Create required directory [~/.local/var]
      file:
        path: '{{ ansible_env.HOME }}/.local/var/'
        state: directory

    - name: Install development tools
      become: yes
      package:
        name: 'build-essential'
        state: present

    - name: Install bash-completion
      become: yes
      package:
        name: bash-completion
        state: present

    - name: Install curl
      become: yes
      package:
        name:  curl
        state: present

    - name: Install wget
      become: yes
      package:
        name: wget
        state: present

    - name: Install libnotify-bin
      become: yes
      package:
        name: libnotify-bin
        state: present

    - name: Install dunst
      become: yes
      package:
        name: dunst
        state: present

    - name: Install firefox
      become: yes
      package:
        name: firefox-esr
        state: present

    - name: Install tmux
      become: yes
      package:
        name: tmux
        state: present

    - name: Install feh
      become: yes
      package:
        name: feh
        state: present

    - name: Install compton
      become: yes
      package:
        name: compton
        state: present

    - name: Install redshift
      become: yes
      package:
        name: redshift
        state: present

    - name: Install Git
      become: yes
      package:
        name: git
        state: present

    - name: Install neovim
      become: yes
      package:
        name: neovim
        state: present

    - name: Install brightnessctl
      become: yes
      package:
        name: brightnessctl
        state: present

    - name: Install fish
      become: yes
      package:
        name: fish
        state: present

    - name: Install bspwm
      become: yes
      package:
        name: bspwm
        state: present

    - name: Install rofi
      become: yes
      package:
        name: rofi
        state: present

    - name: Install i3lock
      become: yes
      package:
        name: i3lock
        state: present

    - name: Install mpv
      become: yes
      package:
        name: mpv
        state: present

    - name: Create required directory [~/Dev]
      file:
        path: '{{ ansible_env.HOME }}/Dev/'
        state: directory

    - name: Clone configurations
      git:
        repo: https://github.com/saleone/configs
        dest: '{{ ansible_env.HOME }}/Dev/configs'

    - name: Link .bashrc
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/bashrc'
        dest: '{{ ansible_env.HOME }}/.bashrc'
        state: link
        force: yes

    - name: Link .Xresources
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/light.Xresources'
        dest: '{{ ansible_env.HOME }}/.Xresources'
        state: link
        force: yes

    - name: Create required directory [~/.config/fish]
      file:
        path: '{{ ansible_env.HOME }}/.config/fish'
        state: directory

    - name: Link fish theme
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/config.fish'
        dest: '{{ ansible_env.HOME }}/.config/fish/config.fish'
        state: link
        force: yes

    - name: Create required directory [~/.config/polybar]
      file:
        path: '{{ ansible_env.HOME }}/.config/polybar'
        state: directory

    - name: Link polybar theme
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/polybar'
        dest: '{{ ansible_env.HOME }}/.config/polybar/config'
        state: link
        force: yes

    - name: Create required directory [~/.config/rofi]
      file:
        path: '{{ ansible_env.HOME }}/.config/rofi'
        state: directory

    - name: Link rofi theme
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/rofi-light.rasi'
        dest: '{{ ansible_env.HOME }}/.config/rofi/config.rasi'
        state: link
        force: yes

    - name: Create required directory [~/.config/Code/User/]
      file:
        path: '{{ ansible_env.HOME }}/.config/Code/User'
        state: directory

    - name: Link VSCode settings.json
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/vscode/settings.json'
        dest: '{{ ansible_env.HOME }}/.config/Code/User/settings.json'
        state: link
        force: yes

    - name: Link VSCode keybindings.json
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/vscode/keybindings.json'
        dest: '{{ ansible_env.HOME }}/.config/Code/User/keybindings.json'
        state: link
        force: yes

    - name: Link VSCode snippets
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/vscode/snippets'
        dest: '{{ ansible_env.HOME }}/.config/Code/User/snippets'
        state: link
        force: yes

    - name: Download VSCode
      get_url:
        url: https://go.microsoft.com/fwlink/?LinkID=760868
        dest: '{{ ansible_env.HOME }}/code.deb'

    - name: Install VSCode
      become: yes
      command: 'dpkg -i "{{ ansible_env.HOME }}/code.deb"'

    - name: Remove downloaded VSCode package
      file:
        path: '{{ ansible_env.HOME }}/code.deb'
        state: absent

    - name: Create required directory [~/.config/dunst/]
      file:
        path: '{{ ansible_env.HOME }}/.config/dunst/'
        state: directory

    - name:  dunstrc
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/dunstrc'
        dest: '{{ ansible_env.HOME }}/.config/dunst/dunstrc'
        state: link
        force: yes

    - name: Create required directory [~/.config/bspwm/]
      file:
        path: '{{ ansible_env.HOME }}/.config/bspwm/'
        state: directory

    - name:  bspwmrc
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/bspwmrc'
        dest: '{{ ansible_env.HOME }}/.config/bspwm/bspwmrc'
        state: link
        force: yes

    - name: Create required directory [~/.config/sxhkd/]
      file:
        path: '{{ ansible_env.HOME }}/.config/sxhkd/'
        state: directory

    - name:  sxhkdrc
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/sxhkdrc'
        dest: '{{ ansible_env.HOME }}/.config/sxhkd/sxhkdrc'
        state: link
        force: yes

    - name: Link .gitconfig
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/gitconfig'
        dest: '{{ ansible_env.HOME }}/.gitconfig'
        state: link
        force: yes

    - name: Create required directory [~/.config/nvim/]
      file:
        path: '{{ ansible_env.HOME }}/.config/nvim/'
        state: directory

    - name: Link vimrc for Neovim
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/vimrc'
        dest: '{{ ansible_env.HOME }}/.config/nvim/init.vim'
        state: link
        force: yes

    - name: Link compton.conf
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/compton.conf'
        dest: '{{ ansible_env.HOME }}/.config/compton.conf'
        state: link
        force: yes

    - name: Link redshift.conf
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/redshift.conf'
        dest: '{{ ansible_env.HOME }}/.config/redshift.conf'
        state: link
        force: yes

    - name: Link controls script
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/scripts/controls'
        dest: '{{ ansible_env.HOME }}/.local/bin/controls'
        state: link
        force: yes

    - name: Install Ubuntu font family
      become: yes
      package:
          name: fonts-ubuntu*
          state: present

    - name: Install Fira Code font
      become: yes
      package:
          name: fonts-firacode
          state: present

    - name: Install Liberation font family
      become: yes
      package:
          name: fonts-liberation
          state: present

    - name: Install fontawesome fonts
      become: yes
      package:
          name: fonts-font-awesome
          state: present
