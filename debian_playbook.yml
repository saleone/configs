---
- hosts: localhost
  tasks:
    - name: Create required directory [~/.config]
      file:
        path: '{{ ansible_env.HOME }}/.config/'
        state: directory

    - name: Create required directory [~/.local/bin]
      file:
        path: '{{ ansible_env.HOME }}/.local/bin/'
        state: directory

    - name: Install development tools
      become: yes
      package:
        name: 'build-essential'
        state: present

    - name: Install bash-completion
      become: yes
      package:
        name: bash-completion
        state: present

    - name: Install curl
      become: yes
      package:
        name:  curl
        state: present

    - name: Install wget
      become: yes
      package:
        name: wget
        state: present

    - name: Install libnotify-bin
      become: yes
      package:
        name: libnotify-bin
        state: present

    - name: Install dunst
      become: yes
      package:
        name: dunst
        state: present

    - name: Install firefox
      become: yes
      package:
        name: firefox-esr
        state: present

    - name: Install tmux
      become: yes
      package:
        name: tmux
        state: present

    - name: Install feh
      become: yes
      package:
        name: feh
        state: present

    - name: Install compton
      become: yes
      package:
        name: compton
        state: present

    - name: Install redshift
      become: yes
      package:
        name: redshift
        state: present

    - name: Install Transmission
      become: yes
      package:
        name: transmission-gtk
        state: present

    - name: Install Git
      become: yes
      package:
        name: git
        state: present

    - name: Install neovim
      become: yes
      package:
        name: neovim
        state: present

    - name: Install brightnessctl
      become: yes
      package:
        name: brightnessctl
        state: present

    - name: Create required directory [~/Dev]
      file:
        path: '{{ ansible_env.HOME }}/Dev/'
        state: directory

     - name: Clone configurations
       git:
         repo: https://github.com/saleone/configs
         dest: '{{ ansible_env.HOME }}/Dev/configs'

    - name: Link .bashrc
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/bashrc'
        dest: '{{ ansible_env.HOME }}/.bashrc'
        state: link
        force: yes


    - name: Create required directory [~/.config/dunst/]
      file:
        path: '{{ ansible_env.HOME }}/.config/dunst/'
        state: directory

    - name: Link dunstrc
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/dunstrc'
        dest: '{{ ansible_env.HOME }}/.config/dunst/dunstrc'
        state: link
        force: yes


    - name: Link .gitconfig
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/gitconfig'
        dest: '{{ ansible_env.HOME }}/.gitconfig'
        state: link
        force: yes

    - name: Create required directory [~/.config/nvim/]
      file:
        path: '{{ ansible_env.HOME }}/.config/nvim/'
        state: directory

    - name: Link vimrc for Neovim
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/vimrc'
        dest: '{{ ansible_env.HOME }}/.config/nvim/init.vim'
        state: link
        force: yes

    - name: Link dwm autostart scripts
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/scripts/dwm_autostart'
        dest: '{{ ansible_env.HOME }}/.dwm_autostart'
        state: link
        force: yes

    - name: Link compton.conf
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/compton.conf'
        dest: '{{ ansible_env.HOME }}/.config/compton.conf'
        state: link
        force: yes

    - name: Link redshift.conf
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/configurations/redshift.conf'
        dest: '{{ ansible_env.HOME }}/.config/redshift.conf'
        state: link
        force: yes

    - name: Link controls script
      file:
        src: '{{ ansible_env.HOME }}/Dev/configs/scripts/controls'
        dest: '{{ ansible_env.HOME }}/.local/bin/controls'
        state: link
        force: yes

    - name: Create required directory [~/Dev/src/]
      file:
        path: '{{ ansible_env.HOME }}/Dev/src/'
        state: directory

    - name: Clone dwm
      git:
        repo: https://github.com/saleone/dwm
        dest: '{{ ansible_env.HOME }}/Dev/src/dwm'

    - name: Install X library (for dwm)
      become: yes
      package:
        name: libx11-dev
        state: present

    - name: Install Xft library (for dwm)
      become: yes
      package:
        name: libxft-dev
        state: present

    - name: Install Xinerama library (for dwm)
      become: yes
      package:
        name: libxinerama-dev
        state: present

    - name: Build and install dwm
      make:
        chdir: '{{ ansible_env.HOME }}/Dev/src/dwm'
        target: install
      become: yes

    - name: Set dwm as window manager
      lineinfile:
        path: '{{ ansible_env.HOME }}/.xinitrc'
        create: yes
        line: exec dwm

    - name: Create .bash_profile
      file:
        path: '{{ ansible_env.HOME }}/.bash_profile'
        state: touch

    - name: Autostart dwm on login
      blockinfile:
        path: '{{ ansible_env.HOME }}/.bash_profile'
        block: |
          # Start X on login
          if [[ ! $DISPLAY && $XDG_VTNR -eq 1 ]]; then
              exec startx
          fi

    - name: Clone st
      git:
        repo: https://github.com/saleone/st
        dest: '{{ ansible_env.HOME }}/Dev/src/st'

    - name: Build and install st
      make:
        chdir: '{{ ansible_env.HOME }}/Dev/src/st'
        target: install
      become: yes

    - name: Clone dmenu
      git:
        repo: https://github.com/saleone/dmenu
        dest: '{{ ansible_env.HOME }}/Dev/src/dmenu'

    - name: Build and install dmenu
      make:
        chdir: '{{ ansible_env.HOME }}/Dev/src/dmenu'
        target: install
      become: yes

    - name: Install Xrandr library (for slock)
      become: yes
      package:
        name: libxrandr-dev
        state: present

    - name: Clone slock
      git:
        repo: https://github.com/saleone/slock
        dest: '{{ ansible_env.HOME }}/Dev/src/slock'

    - name: Build and install slock
      make:
        chdir: '{{ ansible_env.HOME }}/Dev/src/slock'
        target: install
      become: yes

    - name: Install Liberation font family
      become: yes
      package:
          name: fonts-liberation
          state: present

    - name: Install fontawesome fonts
      become: yes
      package:
          name: fonts-font-awesome
          state: present
