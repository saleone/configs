#!/bin/sh
#	http://git.io/v4aH5
#	http://git.z3bra.org/mkb/files.html
#   https://github.com/saleone

FULL=${FULL-█}
EMPTY=${EMPTY-▁}
SIZE=${SIZE-10}

draw()
{
	perc=$1
	size=$2

	inc=$(( perc * size / 100 ))

	for v in $(seq 0 $(( size - 1 )))
	do
		[ "$v" -le "$inc" ] \
			&& out="${out}${FULL}" \
			|| out="${out}${EMPTY}"
	done

    # printf '▕%s▏%02d%%' $out $perc
    printf '%02d%%' $perc
}

cpu()
{
    cpu=$(top -bn1 | grep %Cpu | awk '{value=$2} END {print value}')

    # When CPU reaches 100% load, command above return "us,"
    if [ $cpu = 'us,' ]; then
        cpu='100,0'
    fi

    cpu=$(printf "%.0f" $cpu)

    printf ' %s' "$(draw $cpu $SIZE)"
}

ram()
{
	ram="$(free | awk '/Mem:/ {print int($3/$2 * 100.0)}')"

	printf " %s" "$(draw $ram $SIZE)"
}

battery()
{
    if [ -d /sys/class/power_supply/BAT0 ]; then
        battery=/sys/class/power_supply/BAT0
        b_full=$battery/charge_full
        b_now=$battery/charge_now
        bf=`cat $b_full`
        bn=`cat $b_now`
        status=""
        if [ $(cat /sys/class/power_supply/AC/online) == '1' ]; then
            status="⚡"
        fi
        charge=`printf $(( 100 * bn / bf ))`
        printf " %s%s" "$(draw $charge $SIZE)" "$status"
    fi
}

current_date()
{
    printf ' %s' "$(date +"%b %d")"
}

current_time()
{
    printf ' %s' "$(date +"%R")"

}
# Reset the previosu
xsetroot -name "                                                                                                                "
while :
do
    printf -v status '%s ∥ %s ∥ %s ∥ %s ∥ %s' "$(cpu)" "$(ram)" "$(battery)" "$(current_date)" "$(current_time)"
    echo $status
    xsetroot -name "$status"
    sleep 1
done
